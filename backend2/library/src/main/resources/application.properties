spring.application.name=library

# ========================
# Cấu hình kết nối Database
# ========================
spring.datasource.url=jdbc:postgresql://aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres?prepareThreshold=0&useServerPrepStmts=false
spring.datasource.username=postgres.bodplopetgopwanaxmej
spring.datasource.password=matkhau123
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jackson.serialization.fail-on-empty-beans=false



# ========================
# Cấu hình CORS
# ========================
spring.mvc.cors.allowed-origins=http://localhost:5173



spring.web.cors.allowed-origins=http://localhost:3000


spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=Authorization,Content-Type
spring.web.cors.allow-credentials=true

# ========================
# Cloudinary config
# ========================
cloudinary.cloud-name=dqkr3b1dq
cloudinary.api-key=882773794654671
cloudinary.api-secret=nIaF3SmbiyEf9I-IAi3YFq6H-v4

# ========================
# Cấu hình gửi email
# ========================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=thanhtri005@gmail.com 
# ${MAIL_USERNAME}
spring.mail.password=csilpwposxnnevgm
# ${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true





#spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
#spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
#spring.security.oauth2.client.registration.google.scope=email,profile


# ========================
# OAuth2 (nếu dùng sau này)
# ========================
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=email,profile


#spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
#spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
#spring.security.oauth2.client.registration.google.scope=email,profile



#spring.security.oauth2.client.registration.facebook.client-id=YOUR_FB_CLIENT_ID
#spring.security.oauth2.client.registration.facebook.client-secret=YOUR_FB_CLIENT_SECRET
#spring.security.oauth2.client.registration.facebook.scope=email,public_profile


spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.idle-timeout=300000


# OAuth2 Config for Google
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# OAuth2 Config for Facebook
#spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/facebook
google.client-id=376530680599-mlb7pbrp0inmjnfqmit5q6v4a38e6t09.apps.googleusercontent.com

cloudinary.cloud_name=dqkr3b1dq
cloudinary.api_key=882773794654671
cloudinary.api_secret=nIaF3SmbiyEf9I-IAi3YFq6H-v4


spring.servlet.multipart.max-request-size=10MB

# Momo Payment Config
# momo.partnerCode=MOMOYOURCODE
# momo.accessKey=F8BBA842ECF85
# momo.secretKey=K951B6PE1waDMi640xX08PD3vg6EkVlz
# momo.redirectUrl=http://localhost:3000/return
# momo.ipnUrl=http://localhost:8081/fine/momo-ipn
